# Alert when the rate of events exceeds a threshold

# (Optional)
# Elasticsearch host
es_host: 192.168.100.175

# (Optional)
# Elasticsearch port
es_port: 9200

# (OptionaL) Connect with SSL to Elasticsearch
#use_ssl: True

# (Optional) basic-auth username and password for Elasticsearch
#es_username: someusername
#es_password: somepassword

# (Required)
# Rule name, must be unique
name: brut force

# (Required)
# Type of alert.
# the frequency rule type alerts when num_events events occur with timeframe time
type: blacklist

# (Required)
# Index to search, wildcard supported
index: wazuh-alerts-3.x-*

# (Required, frequency specific)
# Alert when this many documents matching the query occur within a timeframe
num_events: 1

# (Required, frequency specific)
# num_events must occur within this amount of time to trigger an alert
timeframe:
  minutes: 1

# (Required)
# A list of Elasticsearch filters used for find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
#filter:
#- query:
#    query_string:
#      query: "rule.id:2502","rule.id:5710"
compare_key: rule.id
blacklist:
  - "2502"

# (Required)
# The alert is use when a match is found
alert:
- "telegram"

# (required, email specific)
# a list of email addresses to send alerts to
alert_text: "Time: {0}\nAgent: {1}\nDescription: {2}\nUser {3} From: {4} "
alert_text_type: alert_text_only
alert_text_args: ["timestamp","agent.name","rule.description","data.dstuser","data.srcip"]


telegram_bot_token: ""
telegram_room_id: ""
